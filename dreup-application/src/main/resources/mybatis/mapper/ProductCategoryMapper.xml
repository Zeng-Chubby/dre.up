<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.unnnn.repositories.products.ProductCategoryMapper">
  <resultMap id="BaseResultMap" type="net.unnnn.products.ProductCategory">
    <id column="CategoryId" jdbcType="BIGINT" property="categoryid" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="IconUrl" jdbcType="VARCHAR" property="iconurl" />
    <result column="ParentId" jdbcType="BIGINT" property="parentid" />
    <result column="SortOrder" jdbcType="INTEGER" property="sortorder" />
    <result column="Description" jdbcType="VARCHAR" property="description" />
    <result column="CreatedTime" jdbcType="TIMESTAMP" property="createdtime" />
    <result column="IsLeaf" jdbcType="TINYINT" property="isleaf" />
    <result column="IsDeleted" jdbcType="TINYINT" property="isdeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CategoryId, Name, IconUrl, ParentId, SortOrder, Description, CreatedTime, IsLeaf, 
    IsDeleted
  </sql>
  <select id="selectByExample" parameterType="net.unnnn.products.ProductCategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Product_Category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Product_Category
    where CategoryId = #{categoryid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from Product_Category
    where CategoryId = #{categoryid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.unnnn.products.ProductCategoryExample">
    delete from Product_Category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.unnnn.products.ProductCategory">
    insert into Product_Category (CategoryId, Name, IconUrl, 
      ParentId, SortOrder, Description, 
      CreatedTime, IsLeaf, IsDeleted
      )
    values (#{categoryid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{iconurl,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=BIGINT}, #{sortorder,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{createdtime,jdbcType=TIMESTAMP}, #{isleaf,jdbcType=TINYINT}, #{isdeleted,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.unnnn.products.ProductCategory">
    insert into Product_Category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="categoryid != null">
        CategoryId,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="iconurl != null">
        IconUrl,
      </if>
      <if test="parentid != null">
        ParentId,
      </if>
      <if test="sortorder != null">
        SortOrder,
      </if>
      <if test="description != null">
        Description,
      </if>
      <if test="createdtime != null">
        CreatedTime,
      </if>
      <if test="isleaf != null">
        IsLeaf,
      </if>
      <if test="isdeleted != null">
        IsDeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="categoryid != null">
        #{categoryid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconurl != null">
        #{iconurl,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=BIGINT},
      </if>
      <if test="sortorder != null">
        #{sortorder,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null">
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isleaf != null">
        #{isleaf,jdbcType=TINYINT},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.unnnn.products.ProductCategoryExample" resultType="java.lang.Long">
    select count(*) from Product_Category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Product_Category
    <set>
      <if test="record.categoryid != null">
        CategoryId = #{record.categoryid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.iconurl != null">
        IconUrl = #{record.iconurl,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        ParentId = #{record.parentid,jdbcType=BIGINT},
      </if>
      <if test="record.sortorder != null">
        SortOrder = #{record.sortorder,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        Description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createdtime != null">
        CreatedTime = #{record.createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isleaf != null">
        IsLeaf = #{record.isleaf,jdbcType=TINYINT},
      </if>
      <if test="record.isdeleted != null">
        IsDeleted = #{record.isdeleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Product_Category
    set CategoryId = #{record.categoryid,jdbcType=BIGINT},
      Name = #{record.name,jdbcType=VARCHAR},
      IconUrl = #{record.iconurl,jdbcType=VARCHAR},
      ParentId = #{record.parentid,jdbcType=BIGINT},
      SortOrder = #{record.sortorder,jdbcType=INTEGER},
      Description = #{record.description,jdbcType=VARCHAR},
      CreatedTime = #{record.createdtime,jdbcType=TIMESTAMP},
      IsLeaf = #{record.isleaf,jdbcType=TINYINT},
      IsDeleted = #{record.isdeleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.unnnn.products.ProductCategory">
    update Product_Category
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconurl != null">
        IconUrl = #{iconurl,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        ParentId = #{parentid,jdbcType=BIGINT},
      </if>
      <if test="sortorder != null">
        SortOrder = #{sortorder,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        Description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdtime != null">
        CreatedTime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isleaf != null">
        IsLeaf = #{isleaf,jdbcType=TINYINT},
      </if>
      <if test="isdeleted != null">
        IsDeleted = #{isdeleted,jdbcType=TINYINT},
      </if>
    </set>
    where CategoryId = #{categoryid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.unnnn.products.ProductCategory">
    update Product_Category
    set Name = #{name,jdbcType=VARCHAR},
      IconUrl = #{iconurl,jdbcType=VARCHAR},
      ParentId = #{parentid,jdbcType=BIGINT},
      SortOrder = #{sortorder,jdbcType=INTEGER},
      Description = #{description,jdbcType=VARCHAR},
      CreatedTime = #{createdtime,jdbcType=TIMESTAMP},
      IsLeaf = #{isleaf,jdbcType=TINYINT},
      IsDeleted = #{isdeleted,jdbcType=TINYINT}
    where CategoryId = #{categoryid,jdbcType=BIGINT}
  </update>
</mapper>